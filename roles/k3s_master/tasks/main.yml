---
- name: Check if k3s is already installed
  ansible.builtin.stat:
    path: /usr/local/bin/k3s
  register: k3s_binary

- name: Download k3s installer
  ansible.builtin.get_url:
    url: https://get.k3s.io
    dest: /tmp/k3s-install.sh
    mode: '0755'
  when: not k3s_binary.stat.exists

- name: Install k3s server
  ansible.builtin.shell: |
    INSTALL_K3S_VERSION="{{ k3s_version }}" \
    INSTALL_K3S_EXEC="{{ k3s_server_args | join(' ') }}" \
    /tmp/k3s-install.sh
  environment:
    K3S_TOKEN: "{{ k3s_token }}"
    K3S_NODE_NAME: "{{ k3s_node_name }}"
  when: not k3s_binary.stat.exists
  changed_when: false

- name: Wait for k3s to be ready
  ansible.builtin.wait_for:
    port: 6443
    delay: 10
    timeout: 300

- name: Get k3s token
  ansible.builtin.slurp:
    src: /var/lib/rancher/k3s/server/node-token
  register: k3s_node_token

- name: Set k3s token fact
  ansible.builtin.set_fact:
    k3s_token: "{{ k3s_node_token.content | b64decode | trim }}"

- name: Copy kubeconfig to user home
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'

- name: Update kubeconfig server address
  ansible.builtin.replace:
    path: "/home/{{ ansible_user }}/.kube/config"
    regexp: 'https://127.0.0.1:6443'
    replace: "https://{{ ansible_host }}:6443"

- name: Install kubectl completion
  ansible.builtin.shell: |
    kubectl completion bash > /etc/bash_completion.d/kubectl
  args:
    creates: /etc/bash_completion.d/kubectl

- name: Deploy core components
  ansible.builtin.include_tasks: deploy-core.yml
